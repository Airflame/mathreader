from network import Network
import numpy as np
import matplotlib.pyplot as plt

E = [None]*17     #None = NULL
E[0] = [0,1,1,0,0, 1,0,0,1,0, 1,0,0,1,0, 1,0,0,1,0, 1,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #zero
E[1] = [0,0,1,0,0, 0,1,1,0,0, 1,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0]  #one
E[2] = [0,1,1,0,0, 1,0,0,1,0, 0,0,0,1,0, 0,0,1,0,0, 0,1,0,0,0, 1,0,0,0,0, 1,1,1,1,0]  #two
E[3] = [0,1,1,0,0, 1,0,0,1,0, 0,0,0,1,0, 0,1,1,0,0, 0,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #three
E[4] = [0,0,0,1,0, 0,0,1,1,0, 0,1,0,1,0, 1,0,0,1,0, 1,1,1,1,1, 0,0,0,1,0, 0,0,0,1,0]  #four
E[5] = [1,1,1,1,0, 1,0,0,0,0, 1,1,1,0,0, 0,0,0,1,0, 0,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #five
E[6] = [0,1,1,0,0, 1,0,0,1,0, 1,0,0,0,0, 1,1,1,0,0, 1,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #six
E[7] = [1,1,1,1,0, 0,0,0,1,0, 0,0,0,1,0, 0,0,1,0,0, 0,1,0,0,0, 0,1,0,0,0, 0,1,0,0,0]  #seven
E[8] = [0,1,1,0,0, 1,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0, 1,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #eight
E[9] = [0,1,1,0,0, 1,0,0,1,0, 1,0,0,1,0, 0,1,1,1,0, 0,0,0,1,0, 1,0,0,1,0, 0,1,1,0,0]  #nine
E[10] = [0,0,0,0,0, 0,0,1,0,0, 0,0,1,0,0, 1,1,1,1,1, 0,0,1,0,0, 0,0,1,0,0, 0,0,0,0,0]  #plus
E[11] = [0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0, 0,0,0,0,0, 0,0,0,0,0]  #minus
E[12] = [0,0,0,0,0, 1,0,0,0,1, 0,1,0,1,0, 0,0,1,0,0, 0,1,0,1,0, 1,0,0,0,1, 0,0,0,0,0]  #multiplication
E[13] = [0,0,0,0,0, 0,0,1,0,0, 0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0, 0,0,1,0,0, 0,0,0,0,0]  #division
E[14] = [0,0,0,0,0, 0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0, 1,1,1,1,1, 0,0,0,0,0, 0,0,0,0,0]  #equal
E[15] = [0,0,0,1,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,0,1,0]  #(
E[16] = [0,1,0,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,0,1,0,0, 0,1,0,0,0]  #)

symbols = ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "-", "*", "/", "=", "(", ")")

C = [[0]*17 for _ in range(17)]

for i in range(len(C)):
    C[i][i] = 1

network = Network(neurons=(35, 25, 17), input_size=35)
network.fit(iterations=10000, input_data=E, input_labels=C)

R = [E[5], E[10], E[3], E[10], E[2]]

formula = ""
for i in range(len(R)):
    plt.imshow(np.array(R[i]).reshape(7, 5))
    plt.show()
    formula += symbols[network.evaluate(input_vector=R[i])]

print(formula+" -> "+str(eval(formula)))
